@page "/ViewComponent"  
@using System.IO  
@using Microsoft.AspNetCore.Components.Forms
@namespace FaxMailFrontend.Components

<div>
    @if (fileType == "image")
    {
        <img src="@FilePath" alt="Ausgewähltes Dokument" style="height: 500px; width: 400px;" />
    }
    else if (fileType == "pdf")
    {
        <embed src="@FilePath" alt="Ausgewähltes Dokument" style="height: 500px; width: 400px;" />
    }
    else if (fileType == "txt")
    {
        <textarea style="height: 500px; width: 400px;" readonly>@fileContent</textarea>
    }
    else
    {
        <p>File type not supported</p>
    }
</div>

@code {
    [Parameter]  
    public string? FilePath { get; set; }
    [Parameter]
    public string? BasePath { get; set; }
    private string? fileType;  
    private string? fileContent;
    public List<string> DokumentZeilen = new() { };
    protected override void OnParametersSet()  
    {  
        base.OnParametersSet();  
        try
        {
            UpdateViewer();  
        }
        catch (Exception ex)
        {
            throw new Exception($"Error while setting parameters: {ex.Message}");
        }
    }  

    private void UpdateViewer()  
    {  
        try
        {
            if (!string.IsNullOrEmpty(FilePath))
            {
                var extension = Path.GetExtension(FilePath).ToLower();
                fileType = extension switch
                {
                    ".pdf" => "pdf",
                    ".jpg" => "image",
                    ".jpeg" => "image",
                    ".png" => "image",
                    ".tiff" => "image",
                    ".tif" => "image",
                    ".txt" => "txt",
                    ".text" => "txt",
                    _ => "unknown"
                };

                if (fileType == "txt")
                {
                    fileContent = File.ReadAllText(Path.Combine(BasePath!, Path.GetFileName(FilePath)));
                }
            }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            throw new Exception($"Error while updating viewer: {ex.Message}");
        }
   }  
}
